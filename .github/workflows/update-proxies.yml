name: Update Proxy List Automatically

on:
  schedule:
    - cron: '0 */6 * * *'  # Cada 6 horas
  workflow_dispatch:  # Ejecuci√≥n manual
  push:
    branches: [ main ]

jobs:
  update-proxies:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install axios
      run: npm install -g axios
      
    - name: Create update script
      run: |
        cat > update.js << 'EOF'
        const axios = require('axios');
        const fs = require('fs');

        async function updateProxies() {
            try {
                console.log('üîç Obteniendo proxies de GeoNode API...');
                const response = await axios.get('https://proxylist.geonode.com/api/proxy-list?limit=50&page=1&sort_by=lastChecked&sort_type=desc');
                
                const proxies = response.data.data;
                console.log(`üìä Encontrados ${proxies.length} proxies totales`);

                // Filtrar proxies HTTP v√°lidos
                let validProxies = [];
                proxies.forEach(proxy => {
                    if (proxy.ip && proxy.port && proxy.protocols) {
                        if ((proxy.protocols.includes('http') || proxy.protocols.includes('https')) && 
                            proxy.uptime && parseFloat(proxy.uptime) > 50) {
                            validProxies.push(`${proxy.ip}:${proxy.port}`);
                        }
                    }
                });

                console.log(`‚úÖ ${validProxies.length} proxies v√°lidos encontrados`);

                if (validProxies.length === 0) {
                    console.log('‚ö†Ô∏è No se encontraron proxies v√°lidos');
                    return;
                }

                // Leer el archivo PAC actual
                let pacContent = fs.readFileSync('proxy.pac', 'utf8');
                
                // Reemplazar la lista de proxies
                const startMarker = 'var proxies = [';
                const endMarker = '];';
                const startIndex = pacContent.indexOf(startMarker);
                const endIndex = pacContent.indexOf(endMarker, startIndex);

                if (startIndex === -1 || endIndex === -1) {
                    throw new Error('No se pudo encontrar la lista de proxies');
                }

                // Crear nueva lista
                const newProxiesString = 'var proxies = [\n        "' + validProxies.join('",\n        "') + '"\n    ];';
                const newPacContent = pacContent.substring(0, startIndex) + newProxiesString + pacContent.substring(endIndex + endMarker.length);
                
                // Guardar el archivo actualizado
                fs.writeFileSync('proxy.pac', newPacContent);
                
                console.log(`üéØ Proxy PAC actualizado con ${validProxies.length} proxies`);
                console.log('üìã Ejemplos:', validProxies.slice(0, 5));

            } catch (error) {
                console.error('‚ùå Error:', error.message);
            }
        }

        updateProxies();
        EOF
        
    - name: Run update script
      run: node update.js
      
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add proxy.pac
        git diff --staged --quiet || git commit -m "ü§ñ Auto-update proxy list [$(date +%Y-%m-%d)]"
        git push
